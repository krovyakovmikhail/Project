// ConsoleApplication1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std; // используем пространство имен std во всем файле

// 1) объявление переменных 
bool flag = true;

char A = 'E';


short int g = 10;


signed int a = 1133;

long long Bignumber = 184983943242;

 float pi = 3.14;

double n = pi;


int main() 
{ 
	

	cout << flag << endl;
	cout << A <<  endl;
	cout << g<<  endl;
	cout << a <<  endl;
	cout  << Bignumber << endl;;
	cout  << pi << endl;
	cout << n << endl;


	//2) перечисление возможных символов 

	enum sing {X, O}; 

	// 3)создаем массив содеражщий наше перечисление. Назовем его aArray1
	char aArray1[2] { X, O };



	// *создание структуры для поля игры (для игры в крестики-нолики требуется игровое поле 3х3 (т.е массив 3х3) и символы.
		 		
		struct  game
	{
		unsigned short size[3][3]{ {0, 0, 0}, {0, 0, 0}, {0, 0, 0} }; // игровое поле 3х3
		sing symbol; // символы
	};




		//**Создать структуру(struct) объединяющую: union (int, float, char) и 3 - и
		//	битовых поля(флага) указывающими какого типа значение в данный
		//	момент содержится в объединении(isInt, isFloat, isChar).


		// 1) Создать структуру (struct) объединяющую: union (int, float, char) 

		
				union Info // объединение int, float, char.  Новый тип данных Информация 
				{
					int i;
					float a;
					char s;
				};
			
		

		//3 битовых поля(флага)
		struct flags
		{
			unsigned short isInt : 16; // 16 бит соответствует типу int; isInt
			unsigned int isFloat : 32; //  32 бит соответствует типу float; isFloat
			unsigned short isChar : 8; //  8 бит соответствует типу char; isChar
		};
		 
		struct MyStruct // объединение uniion Info и структуры флагов в структуру.
		{
			Info;
			flags;
		};
		
		
	//	cout <<
	
	
	// указываем какого типа значение в данныймомент содержится в объединении (isInt, isFloat, isChar).
	//например в обединении будет записано int 
	

	
		

	return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
